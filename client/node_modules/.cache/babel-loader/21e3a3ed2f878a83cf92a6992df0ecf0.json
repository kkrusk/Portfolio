{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\Desktop\\\\client\\\\src\\\\pages\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [postObject, setPostObject] = useState({});\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState(\"\");\n  const initialValues = {\n    comment_body: \"\",\n    PostId: id\n  };\n  const validationSchema = Yup.object().shape({\n    comment_body: Yup.string() //Can pass error messages into some functions to override base errors\n\n  });\n  useEffect(() => {\n    //useEffect hook renders after each change\n    axios.get(`http://localhost:3001/posts/byId/${id}`).then(response => {\n      setPostObject(response.data);\n    });\n    axios.get(`http://localhost:3001/comments/${id}`).then(response => {\n      setComments(response.data);\n    });\n  }, []); //adding [] cause 'React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array  react-hooks/exhaustive-deps' warning BUT stops infinite loop\n\n  const addComment = () => {\n    axios.post('http://localhost:3001/comments', {\n      comment_body: newComment,\n      PostId: id\n    }).then(response => {\n      const commentToAdd = {\n        comment_body: newComment\n      };\n      setComments([...comments, commentToAdd]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postPage\",\n    id: \"individual\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [\" \", postObject.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_text\",\n          children: [\" \", postObject.post_text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"username\",\n          children: [\" \", postObject.username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addCommentContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Comment\",\n          autoComplete: \"off\",\n          value: newComment,\n          onChange: event => {\n            setNewComment(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment,\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listOfComments\",\n        children: comments.map((comment, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment\",\n            children: comment.comment_body\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"7L4aHWDeWEG0/obUbx5Ket+BFag=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/K/Desktop/client/src/pages/Post.js"],"names":["React","useEffect","useState","useParams","axios","Yup","Post","id","postObject","setPostObject","comments","setComments","newComment","setNewComment","initialValues","comment_body","PostId","validationSchema","object","shape","string","get","then","response","data","addComment","post","commentToAdd","title","post_text","username","event","target","value","map","comment","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport * as Yup from 'yup'\r\n\r\n\r\nfunction Post() {\r\n    let { id } = useParams();\r\n    const [postObject, setPostObject] = useState({});\r\n    const [comments, setComments] = useState([])\r\n    const [newComment, setNewComment] = useState(\"\");\r\n\r\n    const initialValues = {\r\n        comment_body: \"\",\r\n        PostId: id,\r\n    }\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        comment_body: Yup.string(), //Can pass error messages into some functions to override base errors\r\n    })\r\n\r\n    useEffect(() => { //useEffect hook renders after each change\r\n        axios.get(`http://localhost:3001/posts/byId/${id}`).then((response) => {\r\n            setPostObject(response.data)\r\n        })\r\n\r\n        axios.get(`http://localhost:3001/comments/${id}`).then((response) => {\r\n            setComments(response.data)\r\n        })\r\n    }, []); //adding [] cause 'React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array  react-hooks/exhaustive-deps' warning BUT stops infinite loop\r\n\r\n    const addComment = () => {\r\n        axios.post('http://localhost:3001/comments', { comment_body: newComment, PostId: id }).then((response) => {\r\n            const commentToAdd = { comment_body: newComment };\r\n            setComments([...comments, commentToAdd]);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='postPage' id='individual'>\r\n            <div className='leftSide'>\r\n                <div className='post'>\r\n                    <div className='title'> {postObject.title} </div>\r\n                    <div className='post_text'> {postObject.post_text} </div>\r\n                    <div className='username'> {postObject.username} </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='rightSide'>\r\n                <div className='addCommentContainer'>\r\n                    {/* event + event.target.value allows you to grab input and put them into a state in react  DO NOT NEED TO USE WITH FORMIK*/}\r\n                    <input type='text' placeholder='Comment' autoComplete='off' value={newComment} onChange={(event) => { setNewComment(event.target.value) }} />\r\n                    <button onClick={addComment}> </button>\r\n                </div>\r\n\r\n                <div className='listOfComments'>\r\n                    {comments.map((comment, key) => {\r\n                        return (\r\n                            <div className='comment' key={key}>\r\n                                {comment.comment_body}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}
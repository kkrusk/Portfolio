{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\Desktop\\\\client\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useHistory } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik'; //Formik allows for easy creation of forms and fields in the front end and removes the requirement to set states in React\n\nimport * as Yup from 'yup'; // Yup is a library that validates forms\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  let history = useHistory();\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  }; //Yup.object creates object .shape allows to shape object to form values\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().min(3, \"Username must be at least 3 characters long\").max(15, \"Username must be at most 15 characters long\").required(\"Username is required\"),\n    password: Yup.string().min(3, \"Password must be at least 3 characters long\").max(15, \"Password must be at most 20 characters long\").required(\"Password is required\")\n  });\n\n  const onSubmit = data => {\n    axios.post('http://localhost:3001/auth', data).then(response => {\n      history.push('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreateUser\",\n          name: \"username\",\n          placeholder: \"Ex. Username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreateUser\",\n          name: \"password\",\n          placeholder: \"Ex. Password...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/K/Desktop/client/src/pages/Register.js"],"names":["React","useHistory","Formik","Form","Field","ErrorMessage","Yup","axios","Register","history","initialValues","username","password","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","response","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD,C,CAA2D;;AAC3D,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAA2B;;AAC3B,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAIC,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAMS,aAAa,GAAG;AAClBC,IAAAA,QAAQ,EAAE,EADQ;AAElBC,IAAAA,QAAQ,EAAE;AAFQ,GAAtB,CAHgB,CAQhB;;AACA,QAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;AACxCJ,IAAAA,QAAQ,EAAEL,GAAG,CAACU,MAAJ,GACLC,GADK,CACD,CADC,EACE,6CADF,EAELC,GAFK,CAED,EAFC,EAEG,6CAFH,EAGLC,QAHK,CAGI,sBAHJ,CAD8B;AAKxCP,IAAAA,QAAQ,EAAEN,GAAG,CAACU,MAAJ,GACLC,GADK,CACD,CADC,EACE,6CADF,EAELC,GAFK,CAED,EAFC,EAEG,6CAFH,EAGLC,QAHK,CAGI,sBAHJ;AAL8B,GAAnB,CAAzB;;AAWA,QAAMC,QAAQ,GAAIC,IAAD,IAAU;AACvBd,IAAAA,KAAK,CAACe,IAAN,CAAW,4BAAX,EAAyCD,IAAzC,EAA+CE,IAA/C,CAAqDC,QAAD,IAAc;AAC9Df,MAAAA,OAAO,CAACgB,IAAR,CAAa,GAAb;AACH,KAFD;AAGH,GAJD;;AAMA,sBACI;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,aAAa,EAAEf,aAAvB;AAAsC,MAAA,QAAQ,EAAEU,QAAhD;AAA0D,MAAA,gBAAgB,EAAEP,gBAA5E;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,gCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,KAAD;AACI,UAAA,YAAY,EAAC,KADjB;AAEI,UAAA,EAAE,EAAC,iBAFP;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAWI,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI,QAAC,KAAD;AACI,UAAA,YAAY,EAAC,KADjB;AAEI,UAAA,EAAE,EAAC,iBAFP;AAGI,UAAA,IAAI,EAAC,UAHT;AAII,UAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAkBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GApDQL,Q;UACSP,U;;;KADTO,Q;AAsDT,eAAeA,QAAf","sourcesContent":["import React, { useHistory } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik' //Formik allows for easy creation of forms and fields in the front end and removes the requirement to set states in React\r\nimport * as Yup from 'yup' // Yup is a library that validates forms\r\nimport axios from \"axios\"\r\n\r\nfunction Register() {\r\n    let history = useHistory();\r\n\r\n    const initialValues = {\r\n        username: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    //Yup.object creates object .shape allows to shape object to form values\r\n    const validationSchema = Yup.object().shape({\r\n        username: Yup.string()\r\n            .min(3, \"Username must be at least 3 characters long\")\r\n            .max(15, \"Username must be at most 15 characters long\")\r\n            .required(\"Username is required\"),\r\n        password: Yup.string()\r\n            .min(3, \"Password must be at least 3 characters long\")\r\n            .max(15, \"Password must be at most 20 characters long\")\r\n            .required(\"Password is required\"),\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post('http://localhost:3001/auth', data).then((response) => {\r\n            history.push('/')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                <Form className='formContainer'>\r\n\r\n                    <label>Username:</label>\r\n                    <ErrorMessage name='username' component='span' />\r\n                    <Field\r\n                        autoComplete='off'\r\n                        id='inputCreateUser'\r\n                        name='username'\r\n                        placeholder=\"Ex. Username...\" />\r\n\r\n                    <label>Password:</label>\r\n                    <ErrorMessage name='password' component='span' />\r\n                    <Field\r\n                        autoComplete='off'\r\n                        id='inputCreateUser'\r\n                        name='password'\r\n                        placeholder=\"Ex. Password...\" />\r\n\r\n                    <button type='submit'> Register </button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}
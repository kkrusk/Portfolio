{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\K\\\\Desktop\\\\Portfolio\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik'; //Formik allows for easy creation of forms and fields in the front end and removes the requirement to set states in React\n\nimport * as Yup from 'yup'; // Yup is a library that validates forms\n\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreatePost() {\n  _s();\n\n  let history = useHistory();\n  const initialValues = {\n    title: \"\",\n    post_text: \"\",\n    username: \"\"\n  }; //Yup.object creates object .shape allows to shape object to form values\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('You must input a title'),\n    //Can pass error messages into some functions to override base errors\n    post_text: Yup.string().required(),\n    username: Yup.string().min(3).max(15).required() //.string requires type to be string -- .min/.max is amount of chars\n\n  });\n\n  const onSubmit = data => {\n    axios.post('http://localhost:3001/posts', data).then(response => {\n      history.push('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createPostPage\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      onSubmit: onSubmit,\n      validationSchema: validationSchema,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        className: \"formContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"title\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"title\",\n          placeholder: \"Ex. Title...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"post_text\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"post_text\",\n          placeholder: \"Ex. Text...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"username\",\n          component: \"span\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          autoComplete: \"off\",\n          id: \"inputCreatePost\",\n          name: \"username\",\n          placeholder: \"Ex. Username...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Create Post \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreatePost, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["C:/Users/K/Desktop/Portfolio/client/src/pages/CreatePost.js"],"names":["React","Formik","Form","Field","ErrorMessage","Yup","axios","useHistory","CreatePost","history","initialValues","title","post_text","username","validationSchema","object","shape","string","required","min","max","onSubmit","data","post","then","response","push"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik' //Formik allows for easy creation of forms and fields in the front end and removes the requirement to set states in React\r\nimport * as Yup from 'yup' // Yup is a library that validates forms\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction CreatePost() {\r\n    let history = useHistory();\r\n\r\n    const initialValues = {\r\n        title: \"\",\r\n        post_text: \"\",\r\n        username: \"\"\r\n    }\r\n\r\n    //Yup.object creates object .shape allows to shape object to form values\r\n    const validationSchema = Yup.object().shape({\r\n        title: Yup.string()\r\n            .required('You must input a title'), //Can pass error messages into some functions to override base errors\r\n        post_text: Yup.string()\r\n            .required(),\r\n        username: Yup.string()\r\n            .min(3)\r\n            .max(15)\r\n            .required() //.string requires type to be string -- .min/.max is amount of chars\r\n    })\r\n\r\n    const onSubmit = (data) => {\r\n        axios.post('http://localhost:3001/posts', data).then((response) => {\r\n            history.push('/')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='createPostPage'>\r\n            <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                <Form className='formContainer'>\r\n\r\n                    <label>Title:</label>\r\n                    <ErrorMessage name='title' component='span' />\r\n                    <Field\r\n                        autoComplete='off'\r\n                        id='inputCreatePost'\r\n                        name='title'\r\n                        placeholder=\"Ex. Title...\" />\r\n\r\n                    <label>Text:</label>\r\n                    <ErrorMessage name='post_text' component='span' />\r\n                    <Field\r\n                        autoComplete='off'\r\n                        id='inputCreatePost'\r\n                        name='post_text'\r\n                        placeholder=\"Ex. Text...\" />\r\n\r\n                    <label>Username:</label>\r\n                    <ErrorMessage name='username' component='span' />\r\n                    <Field\r\n                        autoComplete='off'\r\n                        id='inputCreatePost'\r\n                        name='username'\r\n                        placeholder=\"Ex. Username...\" />\r\n\r\n                    <button type='submit'> Create Post </button>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n"]},"metadata":{},"sourceType":"module"}